---
layout: default
title: Installationsanleitung für Rails Girls
permalink: install
---

# Installationsanleitung für Rails Girls
<span class="muted">Dauer: 5min aktiv / 15-30min passiv</span>

Um Anwendungen und andere Dinge mit Ruby on Rails zu bauen, müssen wir zuerst etwas Software und eine Entwicklungsumgebung einrichten.

Folge den Anleitungen für Dein Betriebssystem. Falls dabei Probleme auftreten sollten, keine Sorge, gib uns einfach bei der Veranstaltung Bescheid und wir lösen sie gemeinsam.

* [OS X](#os-x)
* [Windows](#windows)
* [Linux](#linux)
* [Alternative Installation für alle Betriebssysteme](#virtuelle-maschine)
* [Einen Cloudservice verwenden - Keine Installation notwendig](#cloudservice)

<hr />

## OS X

Die Installationsanleitung für OS X ist derzeit noch nicht auf Deutsch verfügbar.

### *1.* Let&#8217;s check the version of the operating system.

Click the Apple menu and choose *About this Mac*.

![Apple menu](/images/1.png "Apple menu")

### *2.* In the window you will find the version of your operating system.
If your version number starts with 10.6, 10.7, 10.8, 10.9 or 10.10 this guide is for you. If it&#8217;s something else, we can setup your machine at the event.

![About this Mac dialog](/images/2.png "About this Mac dialog")

### *3a.* If your OS X version is 10.9 or higher:

If your version number starts with 10.9 or 10.10, follow these steps. We are installing homebrew and rbenv.

#### *3a1.* Install Command line tools on terminal:

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### *3a2.* Install [Homebrew](http://brew.sh/):

{% highlight sh %}
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
{% endhighlight %}

#### *3a3.* Install [rbenv](https://github.com/sstephenson/rbenv):

{% highlight sh %}
brew update
brew install rbenv rbenv-gem-rehash ruby-build
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
echo 'export PATH="$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
source ~/.bash_profile
{% endhighlight %}

#### *3a4.* Build Ruby with rbenv:

You can find the newest version of Ruby with the command "rbenv install -l".

{% highlight sh %}
rbenv install 2.2.3
{% endhighlight %}

If you got "OpenSSL::SSL::SSLError: ... : certificate verify failed" error, try it this way.

{% highlight sh %}
brew install curl-ca-bundle
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### *3a5.* Set default Ruby:

{% highlight sh %}
rbenv global 2.2.3
{% endhighlight %}

#### *3a6.* Install rails:

{% highlight sh %}
gem i rails --no-ri --no-rdoc
{% endhighlight %}

### *3b.* If your OS X version is 10.6, 10.7, or 10.8:
Download the RailsInstaller for your version of OS X:

* [RailsInstaller for 10.7 and 10.8](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
* [RailsInstaller for 10.6](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

Double click the downloaded file and it will unpack it into the current directory. Double click the the newly unpacked 'RailsInstaller-1.0.4-osx-10.7.app' or 'RailsInstaller-1.0.4-osx-10.6.app' and follow the instructions. It will open a README file with 'Rails Installer OS X' at the top. Please **ignore** the instructions in this file.

If the Rails version wasn't the latest, you could update it using a following command on terminal.

{% highlight sh %}
gem update rails --no-ri --no-rdoc
{% endhighlight %}

Make sure that all works well by running the application generator command.

{% highlight sh %}
rails new railsgirls
{% endhighlight %}

### *4.* Install a text editor to edit code files

For the workshop we recommend the text editor Atom.

* [Download Atom and install it](https://atom.io/)

If you are using Mac OS X 10.7 or older versions, you can use another editor [Sublime Text 2](http://www.sublimetext.com/2).

### *5.* Update your browser

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.


Now you should have a working Ruby on Rails programming setup. Congrats!

<hr />

## Windows

Die Installationsanleitung für Windows ist derzeit noch nicht auf Deutsch verfügbar.

### *1.* Install Rails

Download [RailsInstaller](https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-3.1.0.exe) and run it. Click through the installer using the default options.

Open `Command Prompt with Ruby on Rails` and run the following command:

{% highlight sh %}
rails -v
{% endhighlight %}

If the Rails version is less than 4, update it using a following command:

{% highlight sh %}
gem update rails --no-ri --no-rdoc
{% endhighlight %}

Make sure that all works well by running the application generator command.

{% highlight sh %}
rails new railsgirls
cd railsgirls
rails server
{% endhighlight %}

## Possible errors

### Gem::RemoteFetcher error

If you get this error when running `rails new railsgirls` or `gem update rails`:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read
server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-
0.6.11.gem)
{% endhighlight %}

This means you have an older version of Rubygems and will need to update it manually first verify your Rubygems version

{% highlight sh %}
gem -v
{% endhighlight %}

If it is lower than `2.2.3` you will need to manually update it:


First download the [ruby-gems-update gem](https://github.com/rubygems/rubygems/releases/download/v2.2.3/rubygems-update-2.2.3.gem). Move the file to `c:\\rubygems-update-2.2.3.gem` then run:

{% highlight sh %}
gem install --local c:\\rubygems-update-2.2.3.gem
update_rubygems --no-ri --no-rdoc
gem uninstall rubygems-update -x
{% endhighlight %}

Check your version of rubygems

{% highlight sh %}
gem -v
{% endhighlight %}

Make sure it is higher than `2.2.3`. Re-run the command that was failing previously.


### 'x64_mingw' is not a valid platform` Error

Sometimes you get the following error when running `rails server`:
`'x64_mingw' is not a valid platform` If you experience this error after using the RailsInstaller you have to do a small edit to the file `Gemfile`:

Look at the bottom of the file. You will probably see something like this as one of the last lines in the file:
`gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]`. If you have this line with `:x64_mingw`, then please delete the `:x64_mingw` part. In the end it should just say:
`'tzinfo-data', platforms: [:mingw, :mswin]`

After you did that, please use your Command Prompt again and type `bundle update`.

### *2.* Install a text editor to edit code files

For the workshop we recommend the text editor Atom.

* [Download Atom and install it](https://github.com/atom/atom/releases/latest)
  * Download an atom zip file for windows and decompress it.
  * Copy the folder into your Program Files.
  * Launch atom in the folder.

If you are using Windows Vista or older versions, you can use another editor [Sublime Text 2](http://www.sublimetext.com/2).

Now you should have a working Ruby on Rails programming setup. Congrats!

### *3.* Update your browser

If you use Internet Explorer, we recommend installing [Firefox](mozilla.org/firefox) or [Google Chrome](google.com/chrome).

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.

### *4.* Install node

This is not strictly necessary, but it avoids a problem with and ExecJS::RuntimeError that might
occur later  ([see stackoverflow](https://stackoverflow.com/questions/12520456/execjsruntimeerror-on-windows-trying-to-follow-rubytutorial)).

* Go to [https://nodejs.org/](https://nodejs.org/) and install node

Check your version of node

{% highlight sh %}
node --version
{% endhighlight %}

Make sure it is higher than `0.12`. 

<hr />

## Linux

Die Installationsanleitung für Linux ist derzeit noch nicht auf Deutsch verfügbar.

### *1.* Install Rails


To install the Ruby on Rails development environment you just need to copy the line below for your Linux distribution (Ubuntu or Fedora), paste it in the Terminal and press Enter. Enjoy the text flying on the screen; it will take quite some time. Grabbing a refreshing drink before starting is encouraged.

#### For Ubuntu:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

If you are going to use RVM installations with gnome-terminal, you'll probably need to change it's default options before you can see and use the right Ruby and Rails versions. Find out how: [RVM documentation](http://rvm.io/integration/gnome-terminal).

#### For Fedora:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}

Make sure that all works well by running the application generator command.

Make sure that all works well by running the application generator command.

{% highlight sh %}
rails new railsgirls
cd railsgirls
rails server
{% endhighlight %}


### *2.* Install a text editor to edit code files

For the workshop we recommend the text editor Sublime Text.

* [Download Sublime Text and install it](http://www.sublimetext.com/2)


### *3.* Update your browser

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.


Now you should have a working Ruby on Rails programming setup. Congrats!

<hr />

## Virtuelle Maschine

Anstatt alles direkt auf Deinem Rechner zu installieren, kannst Du auch eine Entwicklungsumgebung in einer virtuellen Maschine einrichten. Details dazu findest du [hier]({% post_url 2014-03-24-alternative-dev-environment %}) (auf Englisch).

<hr />

## Cloudservice

Anstatt Ruby on Rails und einen Texteditor auf Deinem Computer zu installieren, kannst Du zum Entwickeln auch einen Webdienst / Cloudservice verwenden. Alles was Du brauchst ist ein Browser und eine Internetverbindung. Diese Anleitung beschreibt, wie Du den Cloudservice [nitrous.io](https://nitrous.io) einrichtest. Wenn Du einen anderen Cloudservice benutzt, werden dort unter Umständen andere Begriffe verwendet, z.B. 'Workspace' statt 'Box', aber der generelle Ablauf ist normalerweise ähnlich.

**Organizer:** Nitrous ist ein kostenpflichtiger Dienste, der für Communityzwecke kostenfreie Accounts bereitstellt. Bitte wendet Euch an Nitrous <pro [at] nitrous.io>, um kostenfreien Zugang zu erhalten. Dafür werden folgende Infos benötigt:

- Emailadressen der Personen, die nitrous Arbeitsbereiche benötigen
- Wie lange sie nitrous benutzen werden
- Ab wann Ihr Zugriff braucht (Datum, Uhrzeit)
- Für wie lange (Tage, Wochen) Ihr Zugriff braucht

### *1.* Aktualisiere Deinen Browser

Wenn Du den Internet Explorer verwendest, empfehlen wir stattdessen die Installation von [Firefox](mozilla.org/firefox) oder [Google Chrome](google.com/chrome).

Öffne [whatbrowser.org](http://whatbrowser.org) und aktualisiere Deinen Browser, falls Du nicht die neueste Version hast.

### *2.* Lege einen kostenlosen Account an
Gehe zu [https://nitrous.io](https://nitrous.io/) und registriere Dich kostenlos ('Sign Up for Free').

### *3.* Richte eine Entwicklungsbox / einen Workspace für Ruby on Rails ein
* Melde Dich an Deinem nitrous Account an
* Gehe zum Dashboard, in dem Du den grünen 'Open dashboard' Button anklickst
* Lege eine nitrous Box an: wähle Ruby/Rails als Template aus, alles andere kann so bleiben - Du kannst den Namen Deiner Box ändern, wenn Du möchtest
* Es dauert einen Moment, bis Deine Box fertig ist

### *4.* Finde Deine Entwicklungsbox und starte sie neu
* Falls Du Deine Box soeben neu angelegt hast, kannst Du diese Schritte wahrscheinlich überspringen - Du brauchst sie aber ggf., wenn Du Dich später erneut bei nitrous einloggst
* Du findest Deine nitrous Boxen, indem Du entweder ins Dashboard gehst oder aus dem oberen Menu 'Boxes' auswählst
* Wähle Deine Box aus der Liste der Boxen
* Wenn Du Deine Box eine Weile nicht benutzt hast, wurde sie eventuell heruntergefahren. Wenn Du angezeigt bekommst, dass Deine Box nicht läuft, kannst Du sie mit dem entsprechenden Button neu starten
* Wenn Deine Box läuft, wähle 'IDE' um mit dem Programmieren zu beginnen

<<<<<<< HEAD
### *5.* Mit der Entwicklungsbox programmieren
* Auf der linken Seite hast Du einen Dateibrowser, dort kannst Du durch Deine Verzeichnisse und Dateien navigieren
* In der Mitte ist der Texteditor, mit dem Du Deine Dateien verändern kannst
* Unten findest Du das Terminal, in dem Du Befehle ausführen kannst
* Alles was Du brauchst befindet sich im Browser - Du musst nirgendwo sonst einen Texteditor oder ein Terminal starten
* Wenn Du ein Tutorial oder eine Anleitung befolgst, verwende die Befehle für Linux, selbst wenn Du einen Windowscomputer benutzt - Dein Betriebssystem spielt keine Rolle, da die Befehle auf der Entwicklungsbox ausgeführt werden, und dort läuft Linux
* Wenn eine Anleitung oder ein Tutorial Dich auffordern, im Browser etwas wie http://localhost:3000 zu öffnen, gehe stattdessen ins 'Preview' Menu und wähle 'Port 3000'
* Falls Du z.B. http://localhost:3000/posts aufrufem sollst, hänge '/posts' and die geöffnete Vorschau-URL an
=======
### *2.* Create an account

Go to [https://nitrous.io](https://nitrous.io/) and signup.

### *3.* Setup a development box / workspace for ruby on rails
* Login to your nitrous account
* Go to the dashboard by using the green 'Open dashboard' button
* Create a nitrous box: pick Ruby/Rails from the templates - everything else can stay as is, but you can change the name of your box if you want to
* It takes a moment until your box is ready

### *4.* Find and restart your development box
* If you've just created your box, you can probably skip these steps - they're good to know if you login to nitrous again later
* You can always find your nitrous boxes by going to the dashboard or choosing 'Boxes' from the top menu
* Pick your box from the list of boxes
* If you haven't used a box in a while, it might have been shutdown due to inactivity. If you are informed that your box is not running, restart it using the respective button
* When your box is up and running, choose 'IDE' in order to start coding

### *5.* Coding with your development box
* On the left hand side, you find a file browser where you can navigate your directories and file
* In the middle, you find the editor where you can modify your files
* At the bottom, you find the terminal where you can run commands
* Everything you need is here in you browser window - you do not need to start an editor or terminal anywhere else
* If your following a guide or tutorial, use the commands for Linux even if you are on a Windows computer - your operating system does not matter, since all commands are run on your development box, which is a Linux machine
* If a guide or tutorial asks you to point your browser to something like http://localhost:3000, go to the 'Preview' menu and pick 'Port 3000'
* If, for example, you're asked to open http://localhost:3000/posts, please append '/posts' manually to the URL that has been opened
>>>>>>> upstream
